using System;
using Microsoft.Data.Sqlite;

class Program
{
    static string connectionString = "Data Source=teslaRental.db";

    static void Main()
    {
        InitializeDatabase();

        Console.WriteLine("Tesla Automobiļu Īres Platforma");

        AddTesla("Model 3", 10m, 0.5m); // Pievieno automašīnu
        AddKlients("Jānis Bērziņš", "janis@example.com"); // Pievieno klientu

        // Simulē īri: Klients īrē Tesla Model 3 uz 3 stundām, nobraucot 50 km
        PabeigtIri(1, 1, 3, 50);

        Console.WriteLine("Īre pabeigta! Pārbaudiet datubāzi.");
    }

    static void InitializeDatabase()
    {
        using var connection = new SqliteConnection(connectionString);
        connection.Open();

        var command = connection.CreateCommand();
        command.CommandText = @"
            CREATE TABLE IF NOT EXISTS Teslas (
                ID INTEGER PRIMARY KEY AUTOINCREMENT,
                Modelis TEXT,
                StundasLikme REAL,
                KilometraLikme REAL
            );
            CREATE TABLE IF NOT EXISTS Klienti (
                ID INTEGER PRIMARY KEY AUTOINCREMENT,
                VardsUzvards TEXT,
                Epasts TEXT
            );
            CREATE TABLE IF NOT EXISTS IresDarijumi (
                ID INTEGER PRIMARY KEY AUTOINCREMENT,
                KlientaID INTEGER,
                TeslaID INTEGER,
                KopSumma REAL
            );
        ";
        command.ExecuteNonQuery();
    }

    static void AddTesla(string modelis, decimal stundasLikme, decimal kilometraLikme)
    {
        using var connection = new SqliteConnection(connectionString);
        connection.Open();

        var command = connection.CreateCommand();
        command.CommandText = "INSERT INTO Teslas (Modelis, StundasLikme, KilometraLikme) VALUES (@Modelis, @StundasLikme, @KilometraLikme)";
        command.Parameters.AddWithValue("@Modelis", modelis);
        command.Parameters.AddWithValue("@StundasLikme", stundasLikme);
        command.Parameters.AddWithValue("@KilometraLikme", kilometraLikme);

        command.ExecuteNonQuery();
        Console.WriteLine($"Tesla '{modelis}' pievienota.");
    }

    static void AddKlients(string vardsUzvards, string epasts)
    {
        using var connection = new SqliteConnection(connectionString);
        connection.Open();

        var command = connection.CreateCommand();
        command.CommandText = "INSERT INTO Klienti (VardsUzvards, Epasts) VALUES (@VardsUzvards, @Epasts)";
        command.Parameters.AddWithValue("@VardsUzvards", vardsUzvards);
        command.Parameters.AddWithValue("@Epasts", epasts);

        command.ExecuteNonQuery();
        Console.WriteLine($"Klients '{vardsUzvards}' pievienots.");
    }

    static void PabeigtIri(int klientaID, int teslaID, int stundas, int kilometri)
    {
        using var connection = new SqliteConnection(connectionString);
        connection.Open();

        // Iegūst Tesla cenas
        var command = connection.CreateCommand();
        command.CommandText = "SELECT StundasLikme, KilometraLikme FROM Teslas WHERE ID = @TeslaID";
        command.Parameters.AddWithValue("@TeslaID", teslaID);

        using var reader = command.ExecuteReader();
        if (reader.Read())
        {
            var stundasLikme = reader.GetDecimal(0);
            var kilometraLikme = reader.GetDecimal(1);

            // Aprēķina kopējo summu
            var kopSumma = (stundas * stundasLikme) + (kilometri * kilometraLikme);

            // Saglabā darījumu
            var insertCommand = connection.CreateCommand();
            insertCommand.CommandText = "INSERT INTO IresDarijumi (KlientaID, TeslaID, KopSumma) VALUES (@KlientaID, @TeslaID, @KopSumma)";
            insertCommand.Parameters.AddWithValue("@KlientaID", klientaID);
            insertCommand.Parameters.AddWithValue("@TeslaID", teslaID);
            insertCommand.Parameters.AddWithValue("@KopSumma", kopSumma);

            insertCommand.ExecuteNonQuery();

            Console.WriteLine($"Īre pabeigta. Kopējā summa: {kopSumma:F2} EUR");
        }
        else
        {
            Console.WriteLine("Tesla netika atrasta.");
        }
    }
}
